import UIKit

protocol {{ module_info.name }}ViewProtocol: AnyView {
    var presenter: {{ module_info.name }}PresenterProtocol? { get set }
    func presentModel(model: {{ module_info.name }}Model)
}

struct {{ module_info.name }}Model {

}

final class {{ module_info.name }}View: UIView {
    weak var presenter: {{ module_info.name }}PresenterProtocol?

    override init(frame: CGRect) {
        super.init(frame: frame)

        adjustSubviews()
    }

    private func adjustSubviews() {
        setUpConstraints()
    }

    private func setUpConstraints() {}

    required init?(coder aDecoder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }
}

extension {{ module_info.name }}View: {{ module_info.name }}ViewProtocol {
    func presentModel(model: {{ module_info.name }}Model) {

    }
}
